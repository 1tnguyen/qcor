#include "token_collector_util.hpp"
#include "token_collector.hpp"
#include "xacc.hpp"
#include "xacc_service.hpp"

namespace qcor {

void set_verbose(bool verbose) {xacc::set_verbose(verbose);}
void info(const std::string& s) {xacc::info(s);}

std::pair<std::string, std::string>
run_token_collector(clang::Preprocessor &PP, clang::CachedTokens &Toks,
                    const std::string &function_prototype) {

  if (!xacc::isInitialized()) {
    xacc::Initialize();
  }

  auto all_token_collectors = xacc::getServices<TokenCollector>();
  auto all_compilers = xacc::getServices<xacc::Compiler>();
  std::string kernel_src = "", compiler_name = "";

  for (auto &tc : all_token_collectors) {
    xacc::info("Running the " + tc->name() + " token collector");
    std::stringstream tmp_ss;
    (*tc).collect(PP, Toks, tmp_ss);

    if (xacc::hasCompiler(tc->name())) {
      auto compiler = xacc::getCompiler(tc->name());

      kernel_src =
          "__qpu__ " + function_prototype + " {\n" + tmp_ss.str() + " }";
      if (compiler->canParse(kernel_src)) {
        xacc::info(compiler->name() + " could parse tokens generated by " + tc->name());
        compiler_name = compiler->name();
        return std::make_pair(kernel_src, compiler_name);
      } else {
          xacc::info(compiler->name() + " could not parse the tokens.");
      }
    }
  }

  // if we make it here, its not good
  xacc::error("[qcor] Invalid QCOR kernel expression, could not parse with available SyntaxHandlers / XACC Compilers.");
  return std::make_pair(kernel_src, compiler_name);
}

} // namespace qcor